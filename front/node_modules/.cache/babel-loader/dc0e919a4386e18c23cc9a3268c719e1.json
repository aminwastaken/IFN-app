{"ast":null,"code":"import _slicedToArray from\"/home/amin/documents/school/green-it/IFN-app/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/home/amin/documents/school/green-it/IFN-app/front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer,useCallback,useEffect}from\"react\";import{Button,Grid,TextField}from\"@material-ui/core\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import{getDepartments,getRegions,getTownshipByFullAddress,getTownships}from\"../../API/main\";import{useDispatch}from\"react-redux\";import{actionSetTownShip}from\"../action\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialState={departmentList:[],regionList:[],regionsLoaded:false,selectedRegion:\"\",selectedDepartment:\"\",selectedTownship:\"\",townShipList:[]};var SET_REGION_LIST=\"SET_REGION_LIST\";var SET_SELECTED_REGION=\"SET_SELECTED_REGION\";var SET_DEPARTMENT_LIST=\"SET_DEPARTMENT_LIST\";var SET_SELECTED_DEPARTMENT=\"SET_SELECTED_DEPARTMENT\";var SET_TOWN_SHIP_LIST=\"SET_TOWN_SHIP_LIST\";var SET_SELECTED_TOWNSHIP=\"SET_SELECTED_TOWNSHIP\";var reducer=function reducer(state,action){switch(action.type){case SET_REGION_LIST:return _objectSpread(_objectSpread({},state),{},{regionList:action.value,regionsLoaded:true});case SET_SELECTED_REGION:return _objectSpread(_objectSpread({},state),{},{selectedRegion:action.value,departmentList:[],selectedDepartment:\"\",selectedTownship:\"\",townShipList:[]});case SET_DEPARTMENT_LIST:return _objectSpread(_objectSpread({},state),{},{departmentList:action.value,selectedTownship:\"\",townShipList:[]});case SET_SELECTED_DEPARTMENT:return _objectSpread(_objectSpread({},state),{},{selectedDepartment:action.value});case SET_TOWN_SHIP_LIST:return _objectSpread(_objectSpread({},state),{},{townShipList:action.value});case SET_SELECTED_TOWNSHIP:return _objectSpread(_objectSpread({},state),{},{selectedTownship:action.value});default:return state;}};var TabFullAddress=function TabFullAddress(){var dispatch=useDispatch();var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),_useReducer2$=_useReducer2[0],departmentList=_useReducer2$.departmentList,regionList=_useReducer2$.regionList,regionsLoaded=_useReducer2$.regionsLoaded,selectedRegion=_useReducer2$.selectedRegion,selectedDepartment=_useReducer2$.selectedDepartment,selectedTownship=_useReducer2$.selectedTownship,townShipList=_useReducer2$.townShipList,dispatchState=_useReducer2[1];useEffect(function(){if(!regionsLoaded){var unmounted=false;getRegions().then(function(regions){if(!unmounted){dispatchState({type:SET_REGION_LIST,value:regions});}}).catch(function(error){console.error(\"get region\",error);});return function(){unmounted=true;};}},[regionsLoaded]);var onClickItemRegion=useCallback(function(e){var regionName=e.target.value;dispatchState({type:SET_SELECTED_REGION,value:regionName});getDepartments(regionName).then(function(departments){dispatchState({type:SET_DEPARTMENT_LIST,value:departments});}).catch(function(error){console.error(\"\",error);});},[]);var onClickItemDepartment=useCallback(function(e){var departmentName=e.target.value;dispatchState({type:SET_SELECTED_DEPARTMENT,value:departmentName});getTownships(selectedRegion,departmentName).then(function(townShips){dispatchState({type:SET_TOWN_SHIP_LIST,value:townShips});}).catch(function(error){console.error(\"getTownship\",error);});},[selectedRegion]);var onClickItemTownShip=useCallback(function(e){var townshipName=e.target.value;dispatchState({type:SET_SELECTED_TOWNSHIP,value:townshipName});},[]);var toggleSearch=useCallback(function(){getTownshipByFullAddress(selectedRegion,selectedDepartment,selectedTownship).then(function(township){dispatch(actionSetTownShip(township));}).catch(function(e){console.error(\"getTownshipByFullAddress\",e);});},[dispatch,selectedDepartment,selectedRegion,selectedTownship]);return/*#__PURE__*/_jsxs(Grid,{container:true,item:true,xs:12,style:{marginTop:20,justifyContent:\"space-between\",marginLeft:\"30px\",marginRight:\"30px\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,md:12,style:{padding:\"10px\"},children:/*#__PURE__*/_jsx(Autocomplete,{options:regionList,getOptionLabel:function getOptionLabel(option){return option;},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"R\\xE9gion\",placeholder:\"R\\xE9gion\",variant:\"outlined\"}));},onSelect:onClickItemRegion,onChange:function onChange(e){console.log(e);}})}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,style:{padding:\"10px\"},children:/*#__PURE__*/_jsx(Autocomplete,{options:departmentList,getOptionLabel:function getOptionLabel(option){return option;},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"D\\xE9partement\",placeholder:\"D\\xE9partement\",variant:\"outlined\"}));},onSelect:onClickItemDepartment})}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,style:{padding:\"10px\"},children:/*#__PURE__*/_jsx(Autocomplete,{options:townShipList,getOptionLabel:function getOptionLabel(option){return option;},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Commune\",placeholder:\"Commune\",variant:\"outlined\"}));},onSelect:onClickItemTownShip})}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,style:{display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"#226653\",onClick:toggleSearch,children:\"Calculer\"})})]});};export default TabFullAddress;","map":{"version":3,"sources":["/home/amin/documents/school/green-it/IFN-app/front/src/components/SelectTownship/TabFullAddress.js"],"names":["React","useReducer","useCallback","useEffect","Button","Grid","TextField","Autocomplete","getDepartments","getRegions","getTownshipByFullAddress","getTownships","useDispatch","actionSetTownShip","initialState","departmentList","regionList","regionsLoaded","selectedRegion","selectedDepartment","selectedTownship","townShipList","SET_REGION_LIST","SET_SELECTED_REGION","SET_DEPARTMENT_LIST","SET_SELECTED_DEPARTMENT","SET_TOWN_SHIP_LIST","SET_SELECTED_TOWNSHIP","reducer","state","action","type","value","TabFullAddress","dispatch","dispatchState","unmounted","then","regions","catch","error","console","onClickItemRegion","e","regionName","target","departments","onClickItemDepartment","departmentName","townShips","onClickItemTownShip","townshipName","toggleSearch","township","marginTop","justifyContent","marginLeft","marginRight","padding","option","params","log","display"],"mappings":"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","sourcesContent":["import React, { useReducer, useCallback, useEffect } from \"react\";\n\nimport { Button, Grid, TextField } from \"@material-ui/core\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  getDepartments,\n  getRegions,\n  getTownshipByFullAddress,\n  getTownships,\n} from \"../../API/main\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionSetTownShip } from \"../action\";\n\nconst initialState = {\n  departmentList: [],\n  regionList: [],\n  regionsLoaded: false,\n  selectedRegion: \"\",\n  selectedDepartment: \"\",\n  selectedTownship: \"\",\n  townShipList: [],\n};\n\nconst SET_REGION_LIST = \"SET_REGION_LIST\";\nconst SET_SELECTED_REGION = \"SET_SELECTED_REGION\";\n\nconst SET_DEPARTMENT_LIST = \"SET_DEPARTMENT_LIST\";\nconst SET_SELECTED_DEPARTMENT = \"SET_SELECTED_DEPARTMENT\";\n\nconst SET_TOWN_SHIP_LIST = \"SET_TOWN_SHIP_LIST\";\nconst SET_SELECTED_TOWNSHIP = \"SET_SELECTED_TOWNSHIP\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_REGION_LIST:\n      return {\n        ...state,\n        regionList: action.value,\n        regionsLoaded: true,\n      };\n\n    case SET_SELECTED_REGION:\n      return {\n        ...state,\n        selectedRegion: action.value,\n        departmentList: [],\n        selectedDepartment: \"\",\n        selectedTownship: \"\",\n        townShipList: [],\n      };\n\n    case SET_DEPARTMENT_LIST:\n      return {\n        ...state,\n        departmentList: action.value,\n        selectedTownship: \"\",\n        townShipList: [],\n      };\n\n    case SET_SELECTED_DEPARTMENT:\n      return { ...state, selectedDepartment: action.value };\n\n    case SET_TOWN_SHIP_LIST:\n      return {\n        ...state,\n        townShipList: action.value,\n      };\n\n    case SET_SELECTED_TOWNSHIP:\n      return { ...state, selectedTownship: action.value };\n\n    default:\n      return state;\n  }\n};\n\nconst TabFullAddress = () => {\n  const dispatch = useDispatch();\n\n  const [\n    {\n      departmentList,\n      regionList,\n      regionsLoaded,\n      selectedRegion,\n      selectedDepartment,\n      selectedTownship,\n      townShipList,\n    },\n    dispatchState,\n  ] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (!regionsLoaded) {\n      let unmounted = false;\n      getRegions()\n        .then((regions) => {\n          if (!unmounted) {\n            dispatchState({ type: SET_REGION_LIST, value: regions });\n          }\n        })\n        .catch((error) => {\n          console.error(\"get region\", error);\n        });\n\n      return () => {\n        unmounted = true;\n      };\n    }\n  }, [regionsLoaded]);\n\n  const onClickItemRegion = useCallback((e) => {\n    const regionName = e.target.value;\n    dispatchState({ type: SET_SELECTED_REGION, value: regionName });\n    getDepartments(regionName)\n      .then((departments) => {\n        dispatchState({ type: SET_DEPARTMENT_LIST, value: departments });\n      })\n      .catch((error) => {\n        console.error(\"\", error);\n      });\n  }, []);\n\n  const onClickItemDepartment = useCallback(\n    (e) => {\n      const departmentName = e.target.value;\n      dispatchState({ type: SET_SELECTED_DEPARTMENT, value: departmentName });\n      getTownships(selectedRegion, departmentName)\n        .then((townShips) => {\n          dispatchState({ type: SET_TOWN_SHIP_LIST, value: townShips });\n        })\n        .catch((error) => {\n          console.error(\"getTownship\", error);\n        });\n    },\n    [selectedRegion]\n  );\n\n  const onClickItemTownShip = useCallback((e) => {\n    const townshipName = e.target.value;\n    dispatchState({ type: SET_SELECTED_TOWNSHIP, value: townshipName });\n  }, []);\n\n  const toggleSearch = useCallback(() => {\n    getTownshipByFullAddress(\n      selectedRegion,\n      selectedDepartment,\n      selectedTownship\n    )\n      .then((township) => {\n        dispatch(actionSetTownShip(township));\n      })\n      .catch((e) => {\n        console.error(\"getTownshipByFullAddress\", e);\n      });\n  }, [dispatch, selectedDepartment, selectedRegion, selectedTownship]);\n\n  return (\n    <Grid\n      container\n      item\n      xs={12}\n      style={{\n        marginTop: 20,\n        justifyContent: \"space-between\",\n        marginLeft: \"30px\",\n        marginRight: \"30px\",\n      }}\n    >\n      <Grid item md={12} style={{ padding: \"10px\" }}>\n        <Autocomplete\n          options={regionList}\n          getOptionLabel={(option) => option}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Région\"\n              placeholder=\"Région\"\n              variant=\"outlined\"\n            />\n          )}\n          onSelect={onClickItemRegion}\n          onChange={(e) => {\n            console.log(e);\n          }}\n        />\n      </Grid>\n      <Grid item md={12} style={{ padding: \"10px\" }}>\n        <Autocomplete\n          options={departmentList}\n          getOptionLabel={(option) => option}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Département\"\n              placeholder=\"Département\"\n              variant=\"outlined\"\n            />\n          )}\n          onSelect={onClickItemDepartment}\n        />\n      </Grid>\n      <Grid item md={12} style={{ padding: \"10px\" }}>\n        <Autocomplete\n          options={townShipList}\n          getOptionLabel={(option) => option}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Commune\"\n              placeholder=\"Commune\"\n              variant=\"outlined\"\n            />\n          )}\n          onSelect={onClickItemTownShip}\n        />\n      </Grid>\n      <Grid item md={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button variant=\"contained\" color=\"#226653\" onClick={toggleSearch}>\n          Calculer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TabFullAddress;\n"]},"metadata":{},"sourceType":"module"}