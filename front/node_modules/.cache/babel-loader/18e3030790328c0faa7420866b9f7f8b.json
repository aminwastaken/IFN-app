{"ast":null,"code":"import{HOST}from'./contants';var checkError=function checkError(res){if(res.status!==200){throw new Error(res);console.log(res);}return res;};export var getRegions=function getRegions(){var url=\"\".concat(HOST,\"/regions\");return fetch(url).then(checkError).then(function(res){return res.json();});};export var getDepartments=function getDepartments(){var region=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var params=new URLSearchParams({region:region});var url=\"\".concat(HOST,\"/departments?\").concat(params);return fetch(url).then(checkError).then(function(res){return res.json();});};export var getTownships=function getTownships(){var region=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var department=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var querys=new URLSearchParams({region:region,department:department});var url=\"\".concat(HOST,\"/townships?\").concat(querys);return fetch(url).then(checkError).then(function(res){return res.json();});};export var getTownshipByFullAddress=function getTownshipByFullAddress(){var region=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var department=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var township=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';var querys=new URLSearchParams({region:region,department:department,township:township});var url=\"\".concat(HOST,\"/townships?\").concat(querys);return fetch(url).then(checkError).then(function(res){return res.json();});};export var getTownshipByPostalCode=function getTownshipByPostalCode(){var postalCode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var querys=new URLSearchParams({postalCode:postalCode});var url=\"\".concat(HOST,\"/townships?\").concat(querys);return fetch(url).then(checkError).then(function(res){return res.json();});};","map":{"version":3,"sources":["/home/amin/documents/school/green-it/IFN-app/front/src/API/main.js"],"names":["HOST","checkError","res","status","Error","console","log","getRegions","url","fetch","then","json","getDepartments","region","params","URLSearchParams","getTownships","department","querys","getTownshipByFullAddress","township","getTownshipByPostalCode","postalCode"],"mappings":"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","sourcesContent":["import { HOST } from './contants';\n\nconst checkError = (res) => {\n  if (res.status !== 200) {\n    throw new Error(res);\n    console.log(res);\n  }\n  return res;\n}\n\nexport const getRegions = () => {\n  const url = `${HOST}/regions`;\n  return fetch(url)\n    .then(checkError)\n    .then((res) => res.json());\n};\n\nexport const getDepartments = ( region = '') => {\n  const params = new URLSearchParams({ region });\n  const url = `${HOST}/departments?${params}`;\n  return fetch(url)\n    .then(checkError)\n    .then((res) => res.json());\n};\n\nexport const getTownships = (region = '', department = '') => {\n  const querys = new URLSearchParams({ region, department });\n  const url = `${HOST}/townships?${querys}`;\n  return fetch(url)\n    .then(checkError)\n    .then((res) => res.json());\n};\n\nexport const getTownshipByFullAddress = (region = '', department = '', township = '') => {\n  const querys = new URLSearchParams({ region, department, township });\n  const url = `${HOST}/townships?${querys}`;\n  return fetch(url)\n    .then(checkError)\n    .then((res) => res.json());\n};\n\nexport const getTownshipByPostalCode = (postalCode = '') => {\n  const querys = new URLSearchParams({ postalCode });\n  const url = `${HOST}/townships?${querys}`;\n  return fetch(url)\n    .then(checkError)\n    .then((res) => res.json());\n};\n"]},"metadata":{},"sourceType":"module"}